name: Notificar Discord ao Criar Issue ou Discuss√£o

# Define em quais situa√ß√µes esse workflow ser√° executado
on:
  issues:
    types:
      - opened
  discussion:
    types:
      - created

permissions:
  issues: read
  discussions: read

# Os jobs s√£o conjuntos de actions que s√£o executados na mesma m√°quina virtual.
# √â poss√≠vel ter mais de um job e assim executar a√ß√µes paralelamente.
jobs:
  discord_notification_on_issue_or_discussion:
    runs-on: ubuntu-latest
    steps:
      - name: Notify Discord on Issue or Discussion
        env:
          DISCORD_WEBHOOK_URL_ISSUES: ${{ secrets.DISCORD_WEBHOOK_URL_ISSUES }}
        run: |
          set -euo pipefail

          if [ "${{ github.event_name }}" = "issues" ]; then
            AUTHOR="${{ github.event.issue.user.login }}"
            TITLE="${{ github.event.issue.title }}"
            URL="${{ github.event.issue.html_url }}"
            TYPE="Issue"
            ICON="üìã"
          else
            AUTHOR="${{ github.event.discussion.user.login }}"
            TITLE="${{ github.event.discussion.title }}"
            URL="${{ github.event.discussion.html_url }}"
            TYPE="Discuss√£o"
            ICON="üí¨"
          fi

          TITLE=$(echo "$TITLE" | tr -d '\n\r')
          AUTHOR=$(echo "$AUTHOR" | tr -d '\n\r')
          URL=$(echo "$URL" | tr -d '\n\r')

          PAYLOAD=$(jq -n \
            --arg icon "$ICON" \
            --arg type "$TYPE" \
            --arg author "$AUTHOR" \
            --arg title "$TITLE" \
            --arg url "$URL" \
            '{content: "\($icon) **Nova \($type) Criada \($icon)**\n- Autor: \($author)\n- T√≠tulo: \($title)\n- Link: \($url)"}'
          )

          curl -X POST -H "Content-Type: application/json" \
            -d "$PAYLOAD" \
            "$DISCORD_WEBHOOK_URL_ISSUES"
        shell: bash