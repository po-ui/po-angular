# Nome do workflow, um reposit√≥rio pode tem um ou mais workflows.
name: CI

# Define em quais situa√ß√µes esse workflow ser√° executado
on:
  push:
    branches: [ master, development, '[0-9]+.x.x' ]
  pull_request:
    branches: [ master, development, '[0-9]+.x.x' ]

# Os jobs s√£o conjuntos de actions que s√£o executados na mesma m√°quina virtual.
# √â poss√≠vel ter mais de um job e assim executar a√ß√µes paralelamente.
jobs:
  discord_notification_on_pr:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.pull_request.merged == false
    steps:
      - name: Notify Discord on PR
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          AUTHOR="${{ github.event.pull_request.user.login }}"
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_URL="${{ github.event.pull_request.html_url }}"
          curl -X POST -H "Content-Type: application/json" \
          -d "{\"content\": \"üöÄ **PR Criada com Sucesso üöÄ**\\n- Autor: $AUTHOR\\n- T√≠tulo: $PR_TITLE\\n- Link: $PR_URL\"}" \
          $DISCORD_WEBHOOK_URL
          
  lint:

    runs-on: ubuntu-20.04

    # As etapas do workflow s√£o definidas nessa tag.
    steps:

    # Defini√ß√£o da action
    - uses: actions/checkout@v3
      # Par√¢metros para a a√ß√£o
      with:
        fetch-depth: 0

    - uses: wagoid/commitlint-github-action@v5

    - uses: actions/setup-node@v3
      with:
        node-version: 18

    # Executa um comando do projeto na m√°quina virtual
    - run: npm i
    - run: npm run format:check
    - run: npm run lint:storage
    - run: npm run lint:sync
    - run: npm run lint:ui
    - run: npm run lint:templates
    - run: npm run lint:code-editor

  build:
    name: Build packages

    runs-on: ubuntu-20.04

    steps:

    - uses: actions/checkout@v3

    - uses: actions/setup-node@v3
      with:
        node-version: 18

    - run: npm i
    - run: npm run build
    - run: npm run build:portal:docs
    - run: npm run build:portal:prod

    - uses: actions/upload-artifact@v3
      with:
        name: portal
        path: dist/portal

  test-ui:
    name: Test ui

    runs-on: ubuntu-20.04

    steps:

    - uses: actions/checkout@v3

    - uses: actions/setup-node@v3
      with:
        node-version: 18

    - run: npm i
    - run: npm run test:ui
    - run: npm run test:ui:schematics

  test-templates:
    name: Test templates

    runs-on: ubuntu-20.04

    steps:

    - uses: actions/checkout@v3

    - uses: actions/setup-node@v3
      with:
        node-version: 18

    - run: npm i
    - run: npm run build:ui:lite
    - run: npm run test:templates
    - run: npm run test:templates:schematics

  test-code-editor:
    name: Test code editor

    runs-on: ubuntu-20.04

    steps:

    - uses: actions/checkout@v3

    - uses: actions/setup-node@v3
      with:
        node-version: 18

    - run: npm i
    - run: npm run test:code-editor
    - run: npm run test:code-editor:schematics

  test-storage:
    name: Test storage

    runs-on: ubuntu-20.04

    steps:

    - uses: actions/checkout@v3

    - uses: actions/setup-node@v3
      with:
        node-version: 18

    - run: npm i
    - run: npm run test:storage
    - run: npm run test:storage:schematics

  test-sync:
    name: Test sync

    runs-on: ubuntu-20.04

    steps:

    - uses: actions/checkout@v3

    - uses: actions/setup-node@v3
      with:
        node-version: 18

    - run: npm i
    - run: npm run build:storage:lite
    - run: npm run test:sync
    - run: npm run test:sync:schematics
