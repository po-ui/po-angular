name: PO-UI Publish Next

# URL para os pacotes po-ui no npm
env:
  SCHEMATICS_NPM_PATH: po-ui/ng-schematics
  STORAGE_NPM_PATH: po-ui/ng-storage
  SYNC_NPM_PATH: po-ui/ng-sync
  COMPONENTS_NPM_PATH: po-ui/ng-components
  TEMPLATES_NPM_PATH: po-ui/ng-templates
  CODE_EDITOR_NPM_PATH: po-ui/ng-code-editor
  WORKING_DIR: /home/runner/work/po-angular/po-angular/po-angular

on:
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:

    - name: Check out po-angular
      uses: actions/checkout@v4
      with:
        path: po-angular

    - name: Check out style
      uses: actions/checkout@v4
      with:
        repository: po-ui/po-style
        path: po-style

    - name: Check out lint
      uses: actions/checkout@v4
      with:
        repository: po-ui/po-tslint
        path: po-tslint

    - name: Install and Build
      run: npm install && npm run build
      working-directory: ${{env.WORKING_DIR}}

    # Pega a última versão dos pacotes publicados no npm e armazena em variáveis
    - run: echo "SCHEMATICS_LAST_PUBLISHED_VERSION=$(npm view @${{ env.SCHEMATICS_NPM_PATH }} dist-tags.next)" >> $GITHUB_ENV
    - run: echo "STORAGE_LAST_PUBLISHED_VERSION=$(npm view @${{ env.STORAGE_NPM_PATH }} dist-tags.next)" >> $GITHUB_ENV
    - run: echo "SYNC_LAST_PUBLISHED_VERSION=$(npm view @${{ env.SYNC_NPM_PATH }} dist-tags.next)" >> $GITHUB_ENV
    - run: echo "COMPONENTS_LAST_PUBLISHED_VERSION=$(npm view @${{ env.COMPONENTS_NPM_PATH }} dist-tags.next)" >> $GITHUB_ENV
    - run: echo "TEMPLATES_LAST_PUBLISHED_VERSION=$(npm view @${{ env.TEMPLATES_NPM_PATH }} dist-tags.next)" >> $GITHUB_ENV
    - run: echo "CODE_EDITOR_LAST_PUBLISHED_VERSION=$(npm view @${{ env.CODE_EDITOR_NPM_PATH }} dist-tags.next)" >> $GITHUB_ENV

    # Pega a versão no package.json
    - name: Get package.json version.
      id: package-version
      uses: martinbeentjes/npm-get-version-action@main
      with:
        path: po-angular

    # PUBLISH NG-SCHEMATICS
    - name: ng-schematics - publish
      # Se a versão remota for igual à versão que será publicada então ele pula o publish deste pacote e tenta publicar os demais pacotes
      if: (!contains(env.PACKAGE_VERSION, env.SCHEMATICS_LAST_PUBLISHED_VERSION))
      uses: actions/setup-node@v3
      with:
        node-version: '16.x'
        registry-url: 'https://registry.npmjs.org'
    - run: npm publish ${{env.WORKING_DIR}}/dist/ng-schematics --tag next --ignore-scripts
      env:
        PACKAGE_VERSION: ${{ steps.package-version.outputs.current-version }}
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    # PUBLISH NG-STORAGE
    - name: ng-storage - publish
      if: (!contains(env.PACKAGE_VERSION, env.STORAGE_LAST_PUBLISHED_VERSION))
      uses: actions/setup-node@v3
      with:
        node-version: '16.x'
        registry-url: 'https://registry.npmjs.org'
    - run: npm publish ${{env.WORKING_DIR}}/dist/ng-storage --tag next --ignore-scripts
      env:
        PACKAGE_VERSION: ${{ steps.package-version.outputs.current-version }}
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    # PUBLISH NG-SYNC
    - name: ng-sync - publish
      if: (!contains(env.PACKAGE_VERSION, env.SYNC_LAST_PUBLISHED_VERSION))
      uses: actions/setup-node@v3
      with:
        node-version: '16.x'
        registry-url: 'https://registry.npmjs.org'
    - run: npm publish ${{env.WORKING_DIR}}/dist/ng-sync --tag next --ignore-scripts
      env:
        PACKAGE_VERSION: ${{ steps.package-version.outputs.current-version }}
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    # PUBLISH NG-COMPONENTS
    - name: ng-components - publish
      if: (!contains(env.PACKAGE_VERSION, env.COMPONENTS_LAST_PUBLISHED_VERSION))
      uses: actions/setup-node@v3
      with:
        node-version: '16.x'
        registry-url: 'https://registry.npmjs.org'
    - run: npm publish ${{env.WORKING_DIR}}/dist/ng-components --tag next --ignore-scripts
      env:
        PACKAGE_VERSION: ${{ steps.package-version.outputs.current-version }}
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    # PUBLISH NG-TEMPLATES
    - name: ng-templates - publish
      if: (!contains(env.PACKAGE_VERSION, env.TEMPLATES_LAST_PUBLISHED_VERSION))
      uses: actions/setup-node@v3
      with:
        node-version: '16.x'
        registry-url: 'https://registry.npmjs.org'
    - run: npm publish ${{env.WORKING_DIR}}/dist/ng-templates --tag next --ignore-scripts
      env:
        PACKAGE_VERSION: ${{ steps.package-version.outputs.current-version }}
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    # PUBLISH NG-CODE-EDITOR
    - name: ng-code-editor - publish
      if: (!contains(env.PACKAGE_VERSION, env.CODE_EDITOR_LAST_PUBLISHED_VERSION))
      uses: actions/setup-node@v3
      with:
        node-version: '16.x'
        registry-url: 'https://registry.npmjs.org'
    - run: npm publish ${{env.WORKING_DIR}}/dist/ng-code-editor --tag next --ignore-scripts
      env:
        PACKAGE_VERSION: ${{ steps.package-version.outputs.current-version }}
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
