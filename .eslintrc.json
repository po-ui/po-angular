{
  "root": true,
  "ignorePatterns": ["projects/**/*"],
  "overrides": [
    {
      "files": ["*.ts"],
      "parserOptions": {
        "project": ["tsconfig.json", "e2e/tsconfig.json"],
        "createDefaultProgram": true
      },
      "extends": [
        "plugin:@typescript-eslint/recommended",
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates",
        "plugin:sonarjs/recommended-legacy"
      ],
      "plugins": ["sonarjs", "eslint-plugin-react"],
      "rules": {
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-this-alias": "off",
        "@typescript-eslint/no-unused-vars": "off",
        "@typescript-eslint/no-array-constructor": "off",
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": ["element", "attribute"],
            "prefix": "",
            "style": "kebab-case"
          }
        ],
        "@angular-eslint/directive-class-suffix": "off",
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": "",
            "style": "kebab-case"
          }
        ],
        "@angular-eslint/no-input-rename": "off",
        "@angular-eslint/no-output-rename": "off",
        "@angular-eslint/no-output-native": "off",
        "@angular-eslint/no-output-on-prefix": "off",
        "@angular-eslint/no-conflicting-lifecycle": "off",
        "@typescript-eslint/array-type": [
          "error",
          {
            "default": "generic"
          }
        ],
        "@typescript-eslint/await-thenable": "error",
        "@typescript-eslint/ban-types": [
          "off",
          {
            "types": {
              "String": {
                "message": "Use string instead",
                "fixWith": "string"
              },
              "Boolean": {
                "message": "Use boolean instead",
                "fixWith": "boolean"
              },
              "Number": {
                "message": "Use number instead",
                "fixWith": "number"
              }
            }
          }
        ],
        "@typescript-eslint/consistent-type-assertions": "off",
        "@typescript-eslint/consistent-type-definitions": "error",
        "@typescript-eslint/dot-notation": "off",
        "@typescript-eslint/explicit-member-accessibility": [
          "off",
          {
            "accessibility": "explicit"
          }
        ],
        "@typescript-eslint/member-delimiter-style": [
          "off",
          {
            "multiline": {
              "delimiter": "none",
              "requireLast": true
            },
            "singleline": {
              "delimiter": "semi",
              "requireLast": false
            }
          }
        ],
        "@typescript-eslint/no-empty-interface": "off",
        "@typescript-eslint/no-for-in-array": "error",
        "@typescript-eslint/no-inferrable-types": [
          "off",
          {
            "ignoreParameters": true
          }
        ],
        "@typescript-eslint/no-non-null-assertion": "off",
        "@typescript-eslint/no-unnecessary-type-assertion": "error",
        "@typescript-eslint/no-unused-expressions": "off",
        "@typescript-eslint/no-var-requires": "error",
        "@typescript-eslint/prefer-for-of": "off",
        "@typescript-eslint/quotes": [
          "off",
          "single",
          {
            "allowTemplateLiterals": true
          }
        ],
        "@typescript-eslint/require-array-sort-compare": [
          "error",
          {
            "ignoreStringArrays": true
          }
        ],
        "@typescript-eslint/semi": ["off", null],
        "@typescript-eslint/type-annotation-spacing": "off",
        "camelcase": "off",
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "default",
            "format": ["camelCase"]
          },
          {
            "selector": "variable",
            "format": ["camelCase", "UPPER_CASE", "snake_case", "PascalCase"],
            "leadingUnderscore": "allow"
          },
          {
            "selector": "import",
            "format": ["camelCase", "PascalCase"],
            "leadingUnderscore": "allow"
          },
          {
            "selector": "classProperty",
            "format": ["camelCase", "UPPER_CASE", "snake_case", "PascalCase"],
            "leadingUnderscore": "allow"
          },
          {
            "selector": "parameter",
            "format": ["camelCase"],
            "leadingUnderscore": "allow"
          },
          {
            "selector": "memberLike",
            "modifiers": ["private"],
            "format": ["camelCase"],
            "leadingUnderscore": "allow"
          },
          {
            "selector": "typeLike",
            "format": ["PascalCase", "camelCase"]
          },
          {
            "selector": "enumMember",
            "format": ["UPPER_CASE", "camelCase", "PascalCase"],
            "leadingUnderscore": "allow"
          },
          {
            "selector": ["objectLiteralMethod"],
            "format": ["PascalCase", "camelCase", "snake_case", "UPPER_CASE"],
            "leadingUnderscore": "allow"
          },
          {
            "selector": ["objectLiteralProperty"],
            "format": null,
            "leadingUnderscore": "allow"
          },
          {
            "selector": "function",
            "format": ["PascalCase", "camelCase"],
            "leadingUnderscore": "allow"
          }
        ],
        "@typescript-eslint/member-ordering": [
          "error",
          {
            "default": ["signature", "field", "constructor", "method"]
          }
        ],
        "arrow-parens": ["off", "always"],
        "arrow-body-style": ["error", "as-needed"],
        "brace-style": ["off", "off"],
        "default-case-last": "error",
        "dot-notation": "off",
        "eol-last": "off",
        "id-blacklist": "off",
        "id-match": "off",
        "import/order": "off",
        "indent": "off",
        "linebreak-style": "off",
        "max-len": "off",
        "max-lines-per-function": [
          "off",
          {
            "max": 200
          }
        ],
        "max-params": [
          "error",
          {
            "max": 8
          }
        ],
        "new-parens": "off",
        "newline-per-chained-call": "off",
        "no-empty-function": "off",
        "no-empty-pattern": "off",
        "no-extra-parens": "off",
        "no-extra-semi": "error",
        "no-irregular-whitespace": "off",
        "no-multi-str": "error",
        "no-self-assign": "error",
        "no-shadow": "off",
        "no-trailing-spaces": "off",
        "no-underscore-dangle": "off",
        "no-unused-expressions": [
          "error",
          {
            "allowTernary": true
          }
        ],
        "no-use-before-define": "off",
        "object-shorthand": "off",
        "padded-blocks": [
          "off",
          {
            "blocks": "never"
          },
          {
            "allowSingleLineBlocks": true
          }
        ],
        "prefer-arrow/prefer-arrow-functions": "off",
        "quote-props": "off",
        "jsdoc/no-types": "off",
        "react/jsx-curly-spacing": "off",
        "jsdoc/newline-after-description": "off",
        "react/jsx-equals-spacing": "off",
        "react/jsx-tag-spacing": [
          "off",
          {
            "afterOpening": "allow",
            "closingSlash": "allow"
          }
        ],
        "react/jsx-wrap-multilines": "off",
        "semi": "off",
        "sonarjs/cognitive-complexity": "off",
        "sonarjs/max-switch-cases": "error",
        "sonarjs/no-all-duplicated-branches": "error",
        "sonarjs/no-collapsible-if": "error",
        "sonarjs/no-collection-size-mischeck": "error",
        "sonarjs/no-duplicate-string": "off",
        "sonarjs/no-duplicated-branches": "off",
        "sonarjs/no-element-overwrite": "error",
        "sonarjs/no-identical-conditions": "error",
        "sonarjs/no-identical-expressions": "error",
        "sonarjs/no-identical-functions": "off",
        "sonarjs/no-inverted-boolean-check": "error",
        "sonarjs/no-one-iteration-loop": "error",
        "sonarjs/no-redundant-boolean": "error",
        "sonarjs/no-redundant-jump": "error",
        "sonarjs/no-same-line-conditional": "error",
        "sonarjs/no-small-switch": "error",
        "sonarjs/no-unused-collection": "error",
        "sonarjs/no-use-of-empty-return-value": "error",
        "sonarjs/no-useless-catch": "error",
        "sonarjs/prefer-immediate-return": "error",
        "sonarjs/deprecation": "off",
        "sonarjs/no-nested-functions": "off",
        "sonarjs/no-unused-vars": "off",
        "sonarjs/no-dead-store": "off",
        "sonarjs/no-commented-code": "off",
        "sonarjs/no-clear-text-protocols": "off",
        "sonarjs/pseudo-random": "off",
        "sonarjs/no-nested-assignment": "off",
        "sonarjs/updated-loop-counter": "off",
        "sonarjs/concise-regex": "off",
        "sonarjs/function-return-type": "off",
        "sonarjs/prefer-regexp-exec": "off",
        "sonarjs/unused-import": "off",
        "sonarjs/no-ignored-return": "off",
        "sonarjs/no-undefined-argument": "off",
        "sonarjs/no-selector-parameter": "off",
        "sonarjs/no-skipped-tests": "off",
        "sonarjs/no-alphabetical-sort": "off",
        "sonarjs/no-ignored-exceptions": "off",
        "sonarjs/no-nested-conditional": "off",
        "sonarjs/slow-regex": "off",
        "sonarjs/todo-tag": "off",
        "sonarjs/no-hardcoded-passwords": "off",
        "sonarjs/use-type-alias": "off",
        "sonarjs/prefer-single-boolean-return": "off",
        "sonarjs/no-code-after-done": "off",
        "sonarjs/no-empty-alternatives": "off",
        "sonarjs/no-misleading-array-reverse": "off",
        "sonarjs/single-char-in-character-classes": "off",
        "sonarjs/no-incomplete-assertions": "off",
        "sonarjs/no-redundant-assignments": "off",
        "sonarjs/array-callback-without-return": "off",
        "sonarjs/no-primitive-wrappers": "off",
        "sonarjs/no-angular-bypass-sanitization": "off",
        "sonarjs/link-with-target-blank": "off",
        "sonarjs/class-name": "off",
        "sonarjs/no-empty-test-file": "off",
        "sonarjs/duplicates-in-character-class": "off",
        "sonarjs/no-associative-arrays": "off",
        "space-before-function-paren": "off",
        "space-in-parens": ["off", "never"],
        "@angular-eslint/prefer-standalone": "off",
        "@typescript-eslint/no-unsafe-function-type": "off",
        "@typescript-eslint/no-empty-object-type": "off"
      }
    },
    {
      "files": ["*.html"],
      "extends": ["plugin:@angular-eslint/template/recommended"],
      "rules": {}
    }
  ]
}
